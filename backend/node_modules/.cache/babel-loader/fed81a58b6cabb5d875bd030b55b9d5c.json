{"ast":null,"code":"var _jsxFileName = \"/Users/adammayer/WebApps/magpie/src/components/ErrorBoundry.js\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  } // static getDerivedStateFromError(error) {\n  //     return {\n  //         hasError: true\n  //     }\n  // }\n\n\n  componentDidCatch(error, errorInfo) {\n    console.log('Logging Error', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Oh No, Something Went Wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\nexport default ErrorBoundry;","map":{"version":3,"sources":["/Users/adammayer/WebApps/magpie/src/components/ErrorBoundry.js"],"names":["Component","React","ErrorBoundry","constructor","props","state","hasError","componentDidCatch","error","errorInfo","console","log","render","children"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACxCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH,GANuC,CAQxC;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,SAAR,EAAmB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B,EAAoCC,SAApC;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKP,KAAL,CAAWC,QAAd,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACH;;AAvBuC;AA2B5C,eAAeX,YAAf","sourcesContent":["import { Component } from \"react\";\nimport React from 'react';\n\n\nexport class ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false \n        }\n    }\n\n    // static getDerivedStateFromError(error) {\n    //     return {\n    //         hasError: true\n    //     }\n    // }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('Logging Error', error, errorInfo);\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1> Oh No, Something Went Wrong!</h1>\n        }\n        return this.props.children;\n    }\n\n}\n\nexport default ErrorBoundry\n"]},"metadata":{},"sourceType":"module"}